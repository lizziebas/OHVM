8+5
1:250
print("hello world!")
x <- 1:5
x
y <- c(6, 7, 8, 9, 10)
y
X + y
x
y
X + y
x + y
x * 2
rm(x)
?datasets
data(airmiles)
airmiles
str(airmiles)
rm(list = ls())
groups <- c(rep("blue, 3990"),
rep("red", 4140),
rep("orange", 1890),
rep("green", 3770),
rep("purple", 855))
groups.t1 <- table(groups)
groups.t1
grups.t2 <- sort(groups.tt1, decreasing = TRUE)
grups.t2 <- sort(groups.t1, decreasing = TRUE)
groups.t2
grups.t2
prop.table(grups.t2)
round(prop.tab;e(grups.t2), 2) * 100
round(prop.table(grups.t2), 2) * 100
require("datasets")
?cars
cars
str(cars)
data(cars)
summary(cars$speed)
summary(cars)
fivenum(cars$speed)
boxplot.stats(cars$speed)
install.packages("psych
require("psych")
install.packages("psych")
require("psych")
describe(cars)
prop.test(98, 162)
prop.test(98, 162, alt = "greater", conf.level = .90)
rm(list - ls())
rm(list = ls())
quakes[1:5, ]
mag <- quakes$mag
mag[1:5]
t.test(mag)
t.test(mag, alternative = "greater", mu = 4)
?t.test
rm(list = ls())
?HairEyeColor
str(HairEyeColor)
HairEyeColor
margin.tabe(HairEyeColor, 2)
margin.table(HairEyeColor, 2)
eyes <- margin.table(HairEyeColor, 2)
eyes
round(prop.table(eyes), 2)
chi1 <- chisq.test(eyes)
chi1
chi2 - chisq.test(eyes, p = c(.41, .32, .15, .12))
chi2 <- chisq.test(eyes, p = c(.41, .32, .15, .12))
chi2
rm(list = ls())
?state.area
area <- state.area
area
hist(area)
boxplot(area)
boxplot.stats(area)
summary(area)
mean(area)
median(area)
mean(area, trim = .05)
sd(area)
mad(area)
IQR(area)
fivenum(area)
rm(list = ls())
?mtcars
mtcars <- mtcars
mean(mtcars.mpg)
mean(mtcars, mpg)
rm(list = ls())
OS <- read.csv("C:\Users\ebastian\Documents\Ex_Files_RStats_EssT\Exercise Files\Ch04\04_01\OS.csv", header = TRUE)
?cbind
?subset
?kppm
library("maptools", lib.loc="~/R/win-library/3.1")
library("raster", lib.loc="~/R/win-library/3.1")
?kppm
??kppm
# See this website for an overview
library(USCensus2010)
install.packages(c("UScensus2010", "ggmap"))
CMAP_SOVI <- download.file("https://github.com/lizziebas/OHVM/blob/master/data/CMAP_SOVI.csv")
CMAP_SOVI <- download.file("https://github.com/lizziebas/OHVM/blob/master/data/CMAP_SOVI.csv", destfile = "CMAP_SOVI")
CMAP_SOVI <- read.csv("https://github.com/lizziebas/OHVM/blob/master/data/CMAP_SOVI.csv", header = TRUE)
View(CMAP_SOVI)
CMAP_SOVI <- read.csv("OHVM/data/CMAP_SOVI.csv", header = TRUE)
library(shiny)
library(leaflet)
library(maptools)
library(sp)
library(RColorBrewer)
setwd("C:\\Users\\ebastian\\Documents\\U of I\\OHVM")
BlockGroups <- readShapePoly("CMAPBG.shp", IDvar="GEOID", repair=TRUE)
CMAP_SOVI <- read.csv("data/CMAP_SOVI.csv", header = TRUE)
BlockGroups <- readShapePoly("data/CMAPBG.shp", IDvar="GEOID", repair=TRUE)
BG.merge <- merge(BlockGroups, CMAP_SOVI, by.x = "GEOID", by.y = "sovi.names")
CMAPBoundary <- readShapeLines("data/cmap_counties.shp", repair=TRUE)
pal <- colorQuantile("RdYlGn", domain = -7:7, n = 7, alpha = TRUE)
shinyServer(
function(input,output, session) {
map <- leaflet() %>%
addPolygons(data = "BG.merge",
stroke = TRUE,
color = "#03F",
weight = 1,
fill = TRUE,
fillColor = "pal",
fillOpacity = 0.5) %>%
addPolylines(data = "CMAPBoundary",
stroke = TRUE,
color = "#03F",
weight = 5) %>%
addTiles(urlTemplate = "//{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
attribution = '<a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>') %>%
setView(-88.171231, 41.903066, zoom = 5) %>%
fitBounds(lng1 = -89, lat1 = 43, lng2 = -87, lat2 = 41)
output$mymap <- renderLeaflet(map)
shiny::runApp('C:/Users/ebastian/Box Sync/OHVM Project Folder/Data/R/Shiny')
shiny::runApp('C:/Users/ebastian/Box Sync/OHVM Project Folder/Data/R/Shiny')
})
shiny::runApp('C:/Users/ebastian/Box Sync/OHVM Project Folder/Data/R/Shiny')
CSVI <- read.table("https://github.com/lizziebas/OHVM/blob/master/data/CMAP_SOVI.csv")
CSVI <- read.csv("https://github.com/lizziebas/OHVM/blob/master/data/CMAP_SOVI.csv")
url <- "https://raw.githubusercontent.com/lizziebas/OHVM/master/data/CMAP_SOVI.csv"
CMAP_SOVI <- read.csv("url", header = TRUE)
CMAP_SOVI <- read.csv(getURL("url"), header = TRUE)
CMAP_SOVI <- getURL(url)
library(foreign)
CMAP_SOVI <- getURL(url)
install.packages("RCurl")
library(RCurl)
CMAP_SOVI <- getURL(url)
CMAP_SOVI <- read.csv(CMAP_SOVI, header = TRUE)
CMAP_SOVI <- read.csv(textconnection(CMAP_SOVI), header = TRUE)
CMAP_SOVI <- read.csv("CMAP_SOVI")
CMAP_SOVI <- read.csv("https://raw.githubusercontent.com/lizziebas/OHVM/master/data/CMAP_SOVI.csv")
View(CMAP_SOVI)
BlockGroups <- readShapePoly("https://github.com/lizziebas/OHVM/raw/master/data/CMAPBG.shp", IDvar="GEOID", repair=TRUE)
BlockGroups <- readShapePoly("https://raw.githubusercontent.com/lizziebas/OHVM/raw/master/data/CMAPBG.shp", IDvar="GEOID", repair=TRUE)
